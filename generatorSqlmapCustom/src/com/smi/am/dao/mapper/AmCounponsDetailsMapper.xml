<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smi.am.dao.AmCounponsDetailsMapper" >
  <resultMap id="BaseResultMap" type="com.smi.am.dao.model.AmCounponsDetails" >
    <id column="cd_detailId" property="cdDetailid" jdbcType="VARCHAR" />
    <result column="cd_counponsId" property="cdCounponsid" jdbcType="VARCHAR" />
    <result column="cd_custId" property="cdCustid" jdbcType="VARCHAR" />
    <result column="cd_counponsChannelType" property="cdCounponschanneltype" jdbcType="INTEGER" />
    <result column="cd_used" property="cdUsed" jdbcType="INTEGER" />
    <result column="cd_isGitPackageCounpons" property="cdIsgitpackagecounpons" jdbcType="INTEGER" />
    <result column="cd_gitPackageId" property="cdGitpackageid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cd_detailId, cd_counponsId, cd_custId, cd_counponsChannelType, cd_used, cd_isGitPackageCounpons, 
    cd_gitPackageId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.smi.am.dao.model.AmCounponsDetailsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from am_counpons_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from am_counpons_details
    where cd_detailId = #{cdDetailid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from am_counpons_details
    where cd_detailId = #{cdDetailid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.smi.am.dao.model.AmCounponsDetailsExample" >
    delete from am_counpons_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.smi.am.dao.model.AmCounponsDetails" >
    insert into am_counpons_details (cd_detailId, cd_counponsId, cd_custId, 
      cd_counponsChannelType, cd_used, cd_isGitPackageCounpons, 
      cd_gitPackageId)
    values (#{cdDetailid,jdbcType=VARCHAR}, #{cdCounponsid,jdbcType=VARCHAR}, #{cdCustid,jdbcType=VARCHAR}, 
      #{cdCounponschanneltype,jdbcType=INTEGER}, #{cdUsed,jdbcType=INTEGER}, #{cdIsgitpackagecounpons,jdbcType=INTEGER}, 
      #{cdGitpackageid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.smi.am.dao.model.AmCounponsDetails" >
    insert into am_counpons_details
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cdDetailid != null" >
        cd_detailId,
      </if>
      <if test="cdCounponsid != null" >
        cd_counponsId,
      </if>
      <if test="cdCustid != null" >
        cd_custId,
      </if>
      <if test="cdCounponschanneltype != null" >
        cd_counponsChannelType,
      </if>
      <if test="cdUsed != null" >
        cd_used,
      </if>
      <if test="cdIsgitpackagecounpons != null" >
        cd_isGitPackageCounpons,
      </if>
      <if test="cdGitpackageid != null" >
        cd_gitPackageId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cdDetailid != null" >
        #{cdDetailid,jdbcType=VARCHAR},
      </if>
      <if test="cdCounponsid != null" >
        #{cdCounponsid,jdbcType=VARCHAR},
      </if>
      <if test="cdCustid != null" >
        #{cdCustid,jdbcType=VARCHAR},
      </if>
      <if test="cdCounponschanneltype != null" >
        #{cdCounponschanneltype,jdbcType=INTEGER},
      </if>
      <if test="cdUsed != null" >
        #{cdUsed,jdbcType=INTEGER},
      </if>
      <if test="cdIsgitpackagecounpons != null" >
        #{cdIsgitpackagecounpons,jdbcType=INTEGER},
      </if>
      <if test="cdGitpackageid != null" >
        #{cdGitpackageid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.smi.am.dao.model.AmCounponsDetailsExample" resultType="java.lang.Integer" >
    select count(*) from am_counpons_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update am_counpons_details
    <set >
      <if test="record.cdDetailid != null" >
        cd_detailId = #{record.cdDetailid,jdbcType=VARCHAR},
      </if>
      <if test="record.cdCounponsid != null" >
        cd_counponsId = #{record.cdCounponsid,jdbcType=VARCHAR},
      </if>
      <if test="record.cdCustid != null" >
        cd_custId = #{record.cdCustid,jdbcType=VARCHAR},
      </if>
      <if test="record.cdCounponschanneltype != null" >
        cd_counponsChannelType = #{record.cdCounponschanneltype,jdbcType=INTEGER},
      </if>
      <if test="record.cdUsed != null" >
        cd_used = #{record.cdUsed,jdbcType=INTEGER},
      </if>
      <if test="record.cdIsgitpackagecounpons != null" >
        cd_isGitPackageCounpons = #{record.cdIsgitpackagecounpons,jdbcType=INTEGER},
      </if>
      <if test="record.cdGitpackageid != null" >
        cd_gitPackageId = #{record.cdGitpackageid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update am_counpons_details
    set cd_detailId = #{record.cdDetailid,jdbcType=VARCHAR},
      cd_counponsId = #{record.cdCounponsid,jdbcType=VARCHAR},
      cd_custId = #{record.cdCustid,jdbcType=VARCHAR},
      cd_counponsChannelType = #{record.cdCounponschanneltype,jdbcType=INTEGER},
      cd_used = #{record.cdUsed,jdbcType=INTEGER},
      cd_isGitPackageCounpons = #{record.cdIsgitpackagecounpons,jdbcType=INTEGER},
      cd_gitPackageId = #{record.cdGitpackageid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.smi.am.dao.model.AmCounponsDetails" >
    update am_counpons_details
    <set >
      <if test="cdCounponsid != null" >
        cd_counponsId = #{cdCounponsid,jdbcType=VARCHAR},
      </if>
      <if test="cdCustid != null" >
        cd_custId = #{cdCustid,jdbcType=VARCHAR},
      </if>
      <if test="cdCounponschanneltype != null" >
        cd_counponsChannelType = #{cdCounponschanneltype,jdbcType=INTEGER},
      </if>
      <if test="cdUsed != null" >
        cd_used = #{cdUsed,jdbcType=INTEGER},
      </if>
      <if test="cdIsgitpackagecounpons != null" >
        cd_isGitPackageCounpons = #{cdIsgitpackagecounpons,jdbcType=INTEGER},
      </if>
      <if test="cdGitpackageid != null" >
        cd_gitPackageId = #{cdGitpackageid,jdbcType=INTEGER},
      </if>
    </set>
    where cd_detailId = #{cdDetailid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smi.am.dao.model.AmCounponsDetails" >
    update am_counpons_details
    set cd_counponsId = #{cdCounponsid,jdbcType=VARCHAR},
      cd_custId = #{cdCustid,jdbcType=VARCHAR},
      cd_counponsChannelType = #{cdCounponschanneltype,jdbcType=INTEGER},
      cd_used = #{cdUsed,jdbcType=INTEGER},
      cd_isGitPackageCounpons = #{cdIsgitpackagecounpons,jdbcType=INTEGER},
      cd_gitPackageId = #{cdGitpackageid,jdbcType=INTEGER}
    where cd_detailId = #{cdDetailid,jdbcType=VARCHAR}
  </update>
</mapper>